{"version":3,"sources":["components/Tile.js","components/Cell.js","helper/index.js","assets/img/try-again.gif","components/GameOverlay.js","components/Popup.js","components/Board.js","hooks/useEvent.js","index.js"],"names":["Tile","tile","classArray","id","push","value","mergedInto","row","column","isNew","hasMoved","fromRow","toRow","fromColumn","toColumn","classes","join","className","Cell","rotateLeft","matrix","rows","length","columns","res","this","oldRow","oldColumn","markForDeletion","Board","tiles","cells","score","size","fourProbability","deltaX","deltaY","i","addTile","addRandomTile","setPositions","won","args","hasChanged","currentRow","filter","resultRow","target","targetTile","shift","tile1","tile2","forEach","rowIndex","columnIndex","emptyCells","r","c","cell","Math","random","newValue","direction","clearOldTiles","moveLeft","canMove","dir","newRow","newColumn","GameOverlay","onRestart","board","hasWon","hasLost","onClick","src","TryAgainLogo","alt","style","width","height","cursor","trigger","position","close","BoardView","useState","setBoard","event","handler","passive","useEffect","window","addEventListener","removeEventListener","useEvent","keyCode","newBoard","Object","assign","create","getPrototypeOf","move","map","col","colIndex","index","resetGame","Popup","href","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ba09d6f.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Tile = ({ tile, id }) => {\n  // 1. tile\n  // 2. tile#\n  // 3. position_#_#\n  // 4. row_from_#_to_#\n  // 5. col_from_#_to_#\n  // 6. isMoving\n  // 7. new\n  // 8. merged\n\n  let classArray = [\"tile\"];\n  classArray.push(\"tile\" + tile.value);\n  if (!tile.mergedInto) {\n    classArray.push(`position_${tile.row}_${tile.column}`);\n  }\n  if (tile.mergedInto) {\n    classArray.push(\"merged\");\n  }\n  if (tile.isNew()) {\n    classArray.push(\"new\");\n  }\n  if (tile.hasMoved()) {\n    classArray.push(`row_from_${tile.fromRow()}_to_${tile.toRow()}`);\n    classArray.push(`column_from_${tile.fromColumn()}_to_${tile.toColumn()}`);\n    classArray.push(\"isMoving\");\n  }\n\n  let classes = classArray.join(\" \");\n  return <span className={classes}></span>;\n};\n\nexport default Tile;\n","import React from \"react\";\n\nconst Cell = ({ id }) => {\n  return <span className=\"cell\"></span>;\n};\n\nexport default Cell;\n","var rotateLeft = function (matrix) {\n  var rows = matrix.length;\n  var columns = matrix[0].length;\n  var res = [];\n  for (var row = 0; row < rows; ++row) {\n    res.push([]);\n    for (var column = 0; column < columns; ++column) {\n      res[row][column] = matrix[column][columns - row - 1];\n    }\n  }\n  return res;\n};\n\nclass Tile {\n  constructor(value, row, column) {\n    this.value = value || 0;\n    this.row = row || -1;\n    this.column = column || -1;\n    this.oldRow = -1;\n    this.oldColumn = -1;\n    this.markForDeletion = false;\n    this.mergedInto = null;\n    this.id = this.id++ || 0;\n  }\n  moveTo(row, column) {\n    this.oldRow = this.row;\n    this.oldColumn = this.column;\n    this.row = row;\n    this.column = column;\n  }\n  isNew() {\n    return this.oldRow === -1 && !this.mergedInto;\n  }\n  hasMoved() {\n    return (\n      (this.fromRow() !== -1 &&\n        (this.fromRow() !== this.toRow() ||\n          this.fromColumn() !== this.toColumn())) ||\n      this.mergedInto\n    );\n  }\n  fromRow() {\n    return this.mergedInto ? this.row : this.oldRow;\n  }\n  fromColumn() {\n    return this.mergedInto ? this.column : this.oldColumn;\n  }\n  toRow() {\n    return this.mergedInto ? this.mergedInto.row : this.row;\n  }\n  toColumn() {\n    return this.mergedInto ? this.mergedInto.column : this.column;\n  }\n}\n\nclass Board {\n  constructor() {\n    this.tiles = [];\n    this.cells = [];\n    this.score = 0;\n    this.size = 4;\n    this.fourProbability = 0.1;\n    this.deltaX = [-1, 0, 1, 0];\n    this.deltaY = [0, -1, 0, 1];\n    for (var i = 0; i < this.size; ++i) {\n      this.cells[i] = [\n        this.addTile(),\n        this.addTile(),\n        this.addTile(),\n        this.addTile(),\n      ];\n    }\n    this.addRandomTile();\n    this.addRandomTile();\n    this.setPositions();\n    this.won = false;\n  }\n  addTile(args) {\n    var res = new Tile(args);\n    this.tiles.push(res);\n    return res;\n  }\n\n  moveLeft() {\n    var hasChanged = false;\n    for (var row = 0; row < this.size; ++row) {\n      var currentRow = this.cells[row].filter((tile) => tile.value !== 0);\n      var resultRow = [];\n      for (var target = 0; target < this.size; ++target) {\n        var targetTile = currentRow.length\n          ? currentRow.shift()\n          : this.addTile();\n        if (currentRow.length > 0 && currentRow[0].value === targetTile.value) {\n          var tile1 = targetTile;\n          targetTile = this.addTile(targetTile.value);\n          tile1.mergedInto = targetTile;\n          var tile2 = currentRow.shift();\n          tile2.mergedInto = targetTile;\n          targetTile.value += tile2.value;\n          this.score += tile1.value + tile2.value;\n        }\n        resultRow[target] = targetTile;\n        this.won |= targetTile.value === 2048;\n        hasChanged |= targetTile.value !== this.cells[row][target].value;\n      }\n      this.cells[row] = resultRow;\n    }\n    return hasChanged;\n  }\n  setPositions() {\n    this.cells.forEach((row, rowIndex) => {\n      row.forEach((tile, columnIndex) => {\n        tile.oldRow = tile.row;\n        tile.oldColumn = tile.column;\n        tile.row = rowIndex;\n        tile.column = columnIndex;\n        tile.markForDeletion = false;\n      });\n    });\n  }\n  addRandomTile() {\n    var emptyCells = [];\n    for (var r = 0; r < this.size; ++r) {\n      for (var c = 0; c < this.size; ++c) {\n        if (this.cells[r][c].value === 0) {\n          emptyCells.push({ r: r, c: c });\n        }\n      }\n    }\n    var index = ~~(Math.random() * emptyCells.length);\n    var cell = emptyCells[index];\n    var newValue = Math.random() < this.fourProbability ? 4 : 2;\n    this.cells[cell.r][cell.c] = this.addTile(newValue);\n  }\n  move(direction) {\n    // 0 -> left, 1 -> up, 2 -> right, 3 -> down\n    this.clearOldTiles();\n    for (var i = 0; i < direction; ++i) {\n      this.cells = rotateLeft(this.cells);\n    }\n    var hasChanged = this.moveLeft();\n    for (let i = direction; i < 4; ++i) {\n      this.cells = rotateLeft(this.cells);\n    }\n    if (hasChanged) {\n      this.addRandomTile();\n    }\n    this.setPositions();\n    return this;\n  }\n  clearOldTiles() {\n    this.tiles = this.tiles.filter((tile) => tile.markForDeletion === false);\n    this.tiles.forEach((tile) => {\n      tile.markForDeletion = true;\n    });\n  }\n  hasWon() {\n    return this.won;\n  }\n  hasLost() {\n    var canMove = false;\n    for (var row = 0; row < this.size; ++row) {\n      for (var column = 0; column < this.size; ++column) {\n        canMove |= this.cells[row][column].value === 0;\n        for (var dir = 0; dir < 4; ++dir) {\n          var newRow = row + this.deltaX[dir];\n          var newColumn = column + this.deltaY[dir];\n          if (\n            newRow < 0 ||\n            newRow >= this.size ||\n            newColumn < 0 ||\n            newColumn >= this.size\n          ) {\n            continue;\n          }\n          canMove |=\n            this.cells[row][column].value ===\n            this.cells[newRow][newColumn].value;\n        }\n      }\n    }\n    return !canMove;\n  }\n}\n\nexport { Board };\n","export default __webpack_public_path__ + \"static/media/try-again.4f930231.gif\";","import React from \"react\";\nimport TryAgainLogo from \"../assets/img/try-again.gif\";\nconst GameOverlay = ({ onRestart, board }) => {\n  if (board.hasWon()) {\n    return <div className=\"tile2048\"></div>;\n  } else if (board.hasLost()) {\n    return (\n      <div className=\"gameOver\" onClick={onRestart}>\n        <img\n          src={TryAgainLogo}\n          alt=\"Try Again\"\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            cursor: \"pointer\",\n          }}\n        />\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport default GameOverlay;\n","import React from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\n\r\nexport default () => (\r\n    <Popup trigger={<span className=\"resetButton\">Rules</span>} position=\"top left\">\r\n      {close => (  \r\n        <div className=\"popup-content\">\r\n          <a className=\"popup-arrow\" onClick={close}>\r\n          ❌\r\n          </a>\r\n          <ul>\r\n              <li>When two tiles with equal values collide, they merge into one tile that displays their sum.</li>\r\n              <li>Your objective is to reach 2048 before the board fills up!</li>\r\n          </ul>\r\n\r\n        </div>\r\n      )}\r\n    </Popup>\r\n  );","import React, { useState } from \"react\";\nimport Tile from \"./Tile\";\nimport Cell from \"./Cell\";\nimport { Board } from \"../helper\";\nimport useEvent from \"../hooks/useEvent\";\nimport GameOverlay from \"./GameOverlay\";\nimport Popup from \"./Popup\";\n\nconst BoardView = () => {\n  const [board, setBoard] = useState(new Board());\n\n  const handleKeyDown = (event) => {\n    if (board.hasWon()) {\n      return;\n    }\n\n    if (event.keyCode >= 37 && event.keyCode <= 40) {\n      let direction = event.keyCode - 37;\n      let boardClone = Object.assign(\n        Object.create(Object.getPrototypeOf(board)),\n        board\n      );\n      let newBoard = boardClone.move(direction);\n      setBoard(newBoard);\n    }\n  };\n\n  useEvent(\"keydown\", handleKeyDown);\n\n  const cells = board.cells.map((row, rowIndex) => {\n    return (\n      <div key={rowIndex}>\n        {row.map((col, colIndex) => {\n          return <Cell key={rowIndex * board.size + colIndex} />;\n        })}\n      </div>\n    );\n  });\n\n  const tiles = board.tiles\n    .filter((tile) => tile.value !== 0)\n    .map((tile, index) => {\n      return <Tile tile={tile} key={index} />;\n    });\n\n  const resetGame = () => {\n    setBoard(new Board());\n  };\n\n  return (\n    <div>\n      <div>\n        <h1 className=\"crack-title\">ᑕ𝓻Δς𝕜 &nbsp; ➁０❹➇</h1>\n        <h3 className=\"info-para\">Cₐₙ yₒᵤ ₕᵢₜ ₂₀₄₈? ᵤₛₑ yₒᵤᵣ ₐᵣᵣₒw ₖₑyₛ ₜₒ ₚₗₐy</h3>\n      </div>\n      <div className=\"details-box\">\n        <div className=\"resetButton\" onClick={resetGame}>\n          new game\n        </div>\n        <Popup/>\n        <div className=\"score-box\">\n          <div className=\"score-header\">SCORE</div>\n          <div>{board.score}</div>\n        </div>\n      </div>\n      <div className=\"board\">\n        {cells}\n        {tiles}\n        <GameOverlay onRestart={resetGame} board={board} />\n      </div>\n      <p className=\"footer-para\">Made with 💜 by <a href=\"https://github.com/Lavanyamanohar11\" target=\"_blank\">Lavanya</a> | Motion Graphics by <a href=\"https://www.behance.net/romaincousin\" target=\"_blank\">Romain Cousin</a></p>\n    </div>\n  );\n};\n\nexport default BoardView;\n","import { useEffect } from \"react\";\n\nexport default function useEvent(event, handler, passive = false) {\n  useEffect(() => {\n    window.addEventListener(event, handler, passive);\n\n    return function cleanUp() {\n      window.removeEventListener(event, handler, passive);\n    };\n  });\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport BoardView from \"./components/Board\";\nimport \"./main.scss\";\nimport \"./styles.scss\";\n\nconst App = () => {\n  return <BoardView />;\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}